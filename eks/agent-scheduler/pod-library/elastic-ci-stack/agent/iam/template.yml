AWSTemplateFormatVersion: 2010-09-09
Description: Buildkite On-Demand EKS Elastic CI Stack Pod IAM Role

Parameters:
  KubernetesOidcProviderArn:
    Type: String
  KubernetesOidcProviderId:
    Type: String
  KubernetesNamespace:
    Type: String
  KubernetesServiceAccount:
    Type: String

  BuildkiteAgentTokenParameterStorePath:
    Description: AWS SSM path to the Buildkite agent registration token (this takes precedence over BuildkiteAgentToken). Expects a leading slash ('/').
    Type: String
    Default: ""
    AllowedPattern: "^$|^/[a-zA-Z0-9_.\\-/]+$"
    ConstraintDescription: "Expects a leading forward slash"

  BuildkiteAgentTokenParameterStoreKMSKey:
    Description: AWS KMS key ID used to encrypt the SSM parameter (if encrypted)
    Type: String
    Default: ""

  ECRAccessPolicy:
    Type: String
    Description: ECR access policy to give container instances
    AllowedValues:
      - none
      - readonly
      - poweruser
      - full
    Default: "none"

  ManagedPolicyARN:
    Type: CommaDelimitedList
    Description: Optional - Comma separated list of managed IAM policy ARNs to attach to the instance role
    Default: ""

  SecretsBucket:
    Description: Optional - Name of an existing S3 bucket containing pipeline secrets (Created if left blank)
    Type: String
    Default: ""

  ArtifactsBucket:
    Description: Optional - Name of an existing S3 bucket for build artifact storage
    Type: String
    Default: ""

Conditions:
  UseCustomerManagedKeyForParameterStore:
    !Not [ !Equals [ !Ref BuildkiteAgentTokenParameterStoreKMSKey, "" ] ]

  UseManagedPolicyARN:
    !Not [ !Equals [ !Join [ "", !Ref ManagedPolicyARN ], "" ] ]

  # Whether or not there's any managed polices to attach
  HasManagedPolicies:
    !Or [ { Condition: UseManagedPolicyARN }, { Condition: UseECR } ]

  UseECR:
    !Not [ !Equals [ !Ref ECRAccessPolicy, "none" ] ]

  HasSecretsBucket:
    !Not [ !Equals [ !Ref SecretsBucket, "" ] ]
  HasArtifactsBucket:
    !Not [ !Equals [ !Ref ArtifactsBucket, "" ] ]

Mappings:
  ECRManagedPolicy:
    none      : { Policy: '' }
    readonly  : { Policy: 'arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly' }
    poweruser : { Policy: 'arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser' }
    full      : { Policy: 'arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess' }

Resources:
  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      # Matches document generated by https://docs.aws.amazon.com/eks/latest/userguide/create-service-account-iam-policy-and-role.html
      AssumeRolePolicyDocument:
        !Sub |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "${KubernetesOidcProviderArn}"
              },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "${KubernetesOidcProviderId}:sub": "system:serviceaccount:${KubernetesNamespace}:${KubernetesServiceAccount}"
                }
              }
            }
          ]
        }
      ManagedPolicyArns:
        !If
          - HasManagedPolicies
          # Support multiple policies to attach by merging the values together and splitting on ','
          - !Split
            - ','
            # Join will skip over AWS::NoValue values
            - !Join
             - ','
             - - !If
                 - UseECR
                 - !FindInMap [ ECRManagedPolicy, !Ref ECRAccessPolicy, 'Policy' ]
                 - !Ref 'AWS::NoValue'
               # This may support multiple values of its own (separated by commas)
               - !If
                 - UseManagedPolicyARN
                 - !Join [ ',', !Ref ManagedPolicyARN ]
                 - !Ref 'AWS::NoValue'
          - !Ref AWS::NoValue
      Policies:
        - !If
          - UseCustomerManagedKeyForParameterStore
          - PolicyName: DecryptAgentToken
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - kms:Decrypt
                  Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${BuildkiteAgentTokenParameterStoreKMSKey}
          - !Ref 'AWS::NoValue'
        - PolicyName: ReadAgentToken
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: ssm:GetParameter
                Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${BuildkiteAgentTokenParameterStorePath}
        - PolicyName: InstancePolicy
          PolicyDocument:
            Statement:
              - !If
                - HasSecretsBucket
                - Sid: SecretsBucket
                  Effect: Allow
                  Action:
                    - s3:Get*
                    - s3:List*
                  Resource:
                    - !Sub "arn:aws:s3:::${SecretsBucket}/*"
                    - !Sub "arn:aws:s3:::${SecretsBucket}"
                - !Ref AWS::NoValue
              - !If
                - HasArtifactsBucket
                - Sid: ArtifactsBucket
                  Effect: Allow
                  Action:
                    - s3:GetObject
                    - s3:GetObjectAcl
                    - s3:GetObjectVersion
                    - s3:GetObjectVersionAcl
                    - s3:ListBucket
                    - s3:PutObject
                    - s3:PutObjectAcl
                    - s3:PutObjectVersionAcl
                  Resource:
                    - !Sub "arn:aws:s3:::${ArtifactsBucket}/*"
                    - !Sub "arn:aws:s3:::${ArtifactsBucket}"
                - !Ref AWS::NoValue
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                Resource: "*"
              - Sid: Logging
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource: "*"
              - Sid: Ssm
                Effect: Allow
                Action:
                  - ssm:DescribeInstanceProperties
                  - ssm:ListAssociations
                  - ssm:PutInventory
                  - ssm:UpdateInstanceInformation
                  - ssmmessages:CreateControlChannel
                  - ssmmessages:CreateDataChannel
                  - ssmmessages:OpenControlChannel
                  - ssmmessages:OpenDataChannel
                  - ec2messages:AcknowledgeMessage
                  - ec2messages:DeleteMessage
                  - ec2messages:FailMessage
                  - ec2messages:GetEndpoint
                  - ec2messages:GetMessages
                  - ec2messages:SendReply
                Resource: "*"

Outputs:
  IamRoleArn:
    Value: !GetAtt IAMRole.Arn
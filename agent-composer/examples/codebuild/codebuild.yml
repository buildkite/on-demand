AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Buildkite Agent Image Builder for a GitHub.com repository

Parameters:
  SourceRepository:
    Type: String
    Description: A GitHub source code repository to use to build the docker image.
    AllowedPattern: "^[a-z0-9]+(?:-[a-z0-9]+)*\\/[a-z0-9-_.]+$"
    ConstraintDescription: |
      must be a valid GitHub user/repository path
  ComputeType:
    Type: String
    Default: BUILD_GENERAL1_SMALL
    AllowedValues:
      - BUILD_GENERAL1_SMALL
      - BUILD_GENERAL1_MEDIUM
      - BUILD_GENERAL1_LARGE
    Description: |
      CodeBuild project compute type, choose one of:
      - BUILD_GENERAL1_SMALL: Use up to 3 GB memory and 2 vCPUs for builds.
      - BUILD_GENERAL1_MEDIUM: Use up to 7 GB memory and 4 vCPUs for builds.
      - BUILD_GENERAL1_LARGE: Use up to 15 GB memory and 8 vCPUs for builds.
  RepositoryName:
    Type: String
    Description: Name for an ECR Repository to store images built from SourceRepository.
    AllowedPattern: "^[a-z0-9]+(?:[._-][a-z0-9]+)*(?:\\/[a-z0-9]+(?:[._-][a-z0-9]+)*)*$"
    ConstraintDescription: |
      must be a Docker image name without any forward slashes or a tag suffix

Resources:
  Repository:
    Type: AWS::ECR::Repository
    Properties:
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Delete untagged images",
                "selection": {
                  "tagStatus": "untagged",
                  "countType": "sinceImagePushed",
                  "countUnit": "days",
                  "countNumber": 1
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }
      RepositoryName: !Ref RepositoryName

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - codebuild.amazonaws.com
      Description: Allow ECR log-in, image pull and push.
      Path: /service-role/
      Policies:
        - PolicyName: AllowECRAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: ecr:GetAuthorizationToken
                Resource: "*"
              - Effect: Allow
                Action:
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:CompleteLayerUpload"
                  - "ecr:TagResource"
                  - "ecr:UploadLayerPart"
                  - "ecr:ListImages"
                  - "ecr:InitiateLayerUpload"
                  - "ecr:PutImage"
                Resource: !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${Repository}"
        - PolicyName: AllowCloudWatchAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Resource:
                  - !Sub
                      - "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${Name}-Builder"
                      - Name: !Select [ 1, !Split [ "/", !Ref SourceRepository ] ]
                  - !Sub
                      - "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${Name}-Builder:*"
                      - Name: !Select [ 1, !Split [ "/", !Ref SourceRepository ] ]
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: !Sub "Build ${RepositoryName} images for Buildkite On-Demand"
      Environment:
        ComputeType: !Ref ComputeType
        EnvironmentVariables:
          - Name: IMAGE_REPO
            Type: PLAINTEXT
            Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}:latest"
        Image: aws/codebuild/standard:3.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
      Name:
        !Sub
          - "${Name}-Builder"
          - Name: !Select [ 1, !Split [ "/", !Ref SourceRepository ] ]
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: GITHUB
        Auth:
          Type: OAUTH
        Location: !Sub "https://github.com/${SourceRepository}"

  LogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: CodeBuildProject
    Properties:
      LogGroupName:
        !Sub
          - /aws/codebuild/${Name}-Builder
          - Name: !Select [ 1, !Split [ "/", !Ref SourceRepository ] ]
      RetentionInDays: 1

Outputs:
  Image:
    Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}"
    Description: The Docker image repository.
